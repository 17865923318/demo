apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    field.cattle.io/creatorId: user-znxnq
    field.cattle.io/publicEndpoints: '[{"addresses":["172.16.0.4"],"port":30785,"protocol":"TCP","serviceName":"default:demo-nodeport","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-demo
  name: demo
  selfLink: /apis/apps/v1/namespaces/default/deployments/demo
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-demo
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2019-12-20T09:24:16Z"
        field.cattle.io/ports: '[[{"containerPort":8989,"dnsName":"demo-nodeport","kind":"NodePort","name":"8989tcp1","protocol":"TCP"}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-demo
    spec:
      containers:
      - image: 17865923318/demo:50
        imagePullPolicy: Always
        name: demo
        ports:
        - containerPort: 8989
          name: 8989tcp1
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dev-dockerhub
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
